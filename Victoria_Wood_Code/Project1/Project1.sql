DROP TABLE ERS_REIMBURSEMENT;
CREATE TABLE ERS_REIMBURSEMENT
(
  REIMB_ID NUMBER PRIMARY KEY,
  REIMB_AMOUNT NUMBER(10,2) NOT NULL,
  REIMB_SUBMITTED TIMESTAMP NOT NULL,
  REIMB_RESOLVED TIMESTAMP,
  REIMB_DESCRIPTION VARCHAR2(250),
  REIMB_AUTHOR NUMBER NOT NULL,
  REIMB_RESOLVER NUMBER,
  REIMB_STATUS_ID NUMBER NOT NULL,
  REIMB_TYPE_ID NUMBER NOT NULL
  
);
DROP TABLE ERS_USERS;
CREATE TABLE ERS_USERS
(
  ERS_USERS_ID NUMBER PRIMARY KEY,
  ERS_USERNAME VARCHAR2(50) NOT NULL UNIQUE,
  ERS_PASSWORD VARCHAR2(50) NOT NULL,
  USER_FIRST_NAME VARCHAR2(100) NOT NULL,
  USER_LAST_NAME VARCHAR2(100) NOT NULL,
  USER_EMAIL VARCHAR2(150)NOT NULL UNIQUE,
  USER_ROLE_ID NUMBER NOT NULL

);

DROP TABLE ERS_REIMBURSEMENT_STATUS;
CREATE TABLE ERS_REIMBURSEMENT_STATUS
(
 REIMB_STATUS_ID NUMBER PRIMARY KEY,
 REIMB_STATUS VARCHAR2(10) NOT NULL

);

DROP TABLE ERS_REIMBURSEMENT_TYPE;
CREATE TABLE ERS_REIMBURSEMENT_TYPE
(
  REIMB_TYPE_ID NUMBER PRIMARY KEY,
  REIMB_TYPE VARCHAR2(10) NOT NULL
);

DROP TABLE ERS_USER_ROLES;
CREATE TABLE ERS_USER_ROLES
(
  ERS_USER_ROLE_ID NUMBER PRIMARY KEY,
  USER_ROLE VARCHAR2(10)
);

ALTER TABLE ERS_REIMBURSEMENT ADD CONSTRAINT ERS_USERS_FK_AUTH
    FOREIGN KEY (REIMB_AUTHOR) REFERENCES ERS_USERS (ERS_USERS_ID);
    
ALTER TABLE ERS_REIMBURSEMENT ADD CONSTRAINT ERS_USERS_FK_RESLVR
    FOREIGN KEY (REIMB_RESOLVER) REFERENCES ERS_USERS (ERS_USERS_ID);
    
ALTER TABLE ERS_REIMBURSEMENT ADD CONSTRAINT ERS_REIMBURSEMENT_STATUS_FK
    FOREIGN KEY (REIMB_STATUS_ID) REFERENCES ERS_REIMBURSEMENT_STATUS (REIMB_STATUS_ID);
    
ALTER TABLE ERS_REIMBURSEMENT ADD CONSTRAINT ERS_REIMBURSEMENT_TYPE_FK
    FOREIGN KEY (REIMB_TYPE_ID) REFERENCES ERS_REIMBURSEMENT_TYPE (REIMB_TYPE_ID);
    
ALTER TABLE ERS_USERS ADD CONSTRAINT USER_ROLES_FK
    FOREIGN KEY (USER_ROLE_ID) REFERENCES ERS_USER_ROLES (ERS_USER_ROLE_ID);
    
CREATE SEQUENCE REIMB_SEQ;
CREATE SEQUENCE USERS_SEQ;

CREATE OR REPLACE TRIGGER Reimb_trig
BEFORE INSERT ON ERS_REIMBURSEMENT 
FOR EACH ROW
BEGIN
  select reimb_seq.nextval into : new.reimb_id from dual;
END;
/

CREATE OR REPLACE TRIGGER Users_trig
BEFORE INSERT ON ERS_USERS
FOR EACH ROW
BEGIN
  select users_seq.nextval into : new.ers_users_id from dual;
END;
/

INSERT INTO ERS_USER_ROLES (ERS_USER_ROLE_ID, USER_ROLE) VALUES (1, 'Associate');
INSERT INTO ERS_USER_ROLES (ERS_USER_ROLE_ID, USER_ROLE) VALUES (2, 'HR');
INSERT INTO ERS_USER_ROLES (ERS_USER_ROLE_ID, USER_ROLE) VALUES (3, 'Marketing');
INSERT INTO ERS_USER_ROLES (ERS_USER_ROLE_ID, USER_ROLE) VALUES (4, 'Sales');
INSERT INTO ERS_USER_ROLES (ERS_USER_ROLE_ID, USER_ROLE) VALUES (5, 'FManager');

INSERT INTO ERS_USERS (ERS_USERNAME, ERS_PASSWORD, USER_FIRST_NAME, USER_LAST_NAME, USER_EMAIL, USER_ROLE_ID) 
VALUES('vwood','1234','Victoria','Wood', 'vwood@gm.slc.edu', 1);
INSERT INTO ERS_USERS (ERS_USERNAME, ERS_PASSWORD, USER_FIRST_NAME, USER_LAST_NAME, USER_EMAIL, USER_ROLE_ID)
VALUES('jsmith','5678','John','Smith','jsmith@gmail.com', 5);

INSERT INTO ERS_REIMBURSEMENT_STATUS (REIMB_STATUS_ID, REIMB_STATUS) VALUES (1, 'Pending');
INSERT INTO ERS_REIMBURSEMENT_STATUS (REIMB_STATUS_ID, REIMB_STATUS) VALUES (2, 'Denied');
INSERT INTO ERS_REIMBURSEMENT_STATUS (REIMB_STATUS_ID, REIMB_STATUS) VALUES (3, 'Approved');

INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMB_TYPE_ID, REIMB_TYPE) VALUES (1, 'Lodging');
INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMB_TYPE_ID, REIMB_TYPE) VALUES (2, 'Food');
INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMB_TYPE_ID, REIMB_TYPE) VALUES (3, 'Travel');
INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMB_TYPE_ID, REIMB_TYPE) VALUES (4, 'Supplies');
INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMB_TYPE_ID, REIMB_TYPE) VALUES (5, 'Damages');
INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMB_TYPE_ID, REIMB_TYPE) VALUES (6, 'Other');

INSERT INTO ERS_REIMBURSEMENT (REIMB_AMOUNT, REIMB_SUBMITTED, REIMB_DESCRIPTION, REIMB_AUTHOR, REIMB_STATUS_ID, REIMB_TYPE_ID) 
VALUES (10.00, TO_TIMESTAMP('2019-01-22', 'YYYY-MM-DD'), 'For plane ticket to London', 41, 1, 3);
INSERT INTO ERS_REIMBURSEMENT (REIMB_AMOUNT, REIMB_SUBMITTED, REIMB_DESCRIPTION, REIMB_AUTHOR, REIMB_STATUS_ID, REIMB_TYPE_ID) 
VALUES (50.00, TO_TIMESTAMP('2019-02-14', 'YYYY-MM-DD'), 'Valentines day meal', 41, 1, 2);


DROP VIEW allreimb_view;
CREATE VIEW allreimb_view as
select reimb_id, reimb_amount, reimb_submitted, reimb_resolved, reimb_resolver, reimb_description, 
reimb_type, reimb_status, ers_users_id, user_first_name, user_last_name, user_role
from ers_reimbursement
join ers_reimbursement_type on ers_reimbursement.reimb_type_id = ers_reimbursement_type.reimb_type_id
join ers_reimbursement_status on ers_reimbursement.reimb_status_id = ers_reimbursement_status.reimb_status_id
join ERS_USERS on ers_reimbursement.reimb_author = ers_users.ers_users_id
join ers_user_roles on ers_users.user_role_id = ers_user_roles.ERS_USER_ROLE_ID;


select*from allreimb_view;
select*from ers_users;
select*from ERS_REIMBURSEMENT;







commit;
