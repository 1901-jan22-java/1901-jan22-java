
SELECT COUNT(*) FROM ARTIST;

SELECT NAME, LENGTH(NAME) FROM ARTIST ORDER BY LENGTH(NAME) DESC;

SELECT * FROM ARTIST WHERE ARTISTID NOT BETWEEN 5 AND 15;

SELECT AVG(TOTAL) FROM INVOICE;

SELECT * FROM ALBUM WHERE ARTISTID = (SELECT ARTISTID FROM ARTIST WHERE NAME = 'Aerosmith');

SELECT * FROM ALBUM WHERE ARTISTID IN (SELECT ARTISTID FROM ARTIST WHERE NAME LIKE 'A%');

/****************** JOIN ********************/

SELECT ALBUM.TITLE, ARTIST.NAME
FROM ALBUM
JOIN ARTIST
ON ALBUM.ARTISTID = ARTIST.ARTISTID
ORDER BY ALBUM.TITLE;

/****************** VIEWS *******************/

CREATE VIEW M_ARTISTS AS 
SELECT * FROM ARTIST WHERE NAME LIKE 'M%' OR NAME LIKE 'A%';

SELECT * FROM M_ARTISTS;

CREATE VIEW ALBUM_VIEW AS
SELECT * FROM ALBUM WHERE ALBUMID < 50;

SELECT * FROM ALBUM_VIEW;


SELECT AL.TITLE AS ALBUM, ART.NAME AS ARTIST
FROM ALBUM_VIEW AL
INNER JOIN M_ARTISTS ART
ON AL.ARTISTID = ART.ARTISTID;

SELECT AL.TITLE AS ALBUM, ART.NAME AS ARTIST
FROM ALBUM_VIEW AL
LEFT JOIN M_ARTISTS ART
ON AL.ARTISTID = ART.ARTISTID;


SELECT * FROM TRACK;

SELECT TRACK.NAME AS TRACK, ALBUM.TITLE AS ALBUM, ARTIST.NAME AS ARTIST FROM TRACK
JOIN ALBUM ON TRACK.ALBUMID = ALBUM.ALBUMID
JOIN ARTIST ON ARTIST.ARTISTID = ALBUM.ARTISTID;

--- NATUAL JOIN - WHERE ORACLE ATTEMPTS TO MATCH COLUMNS BASED ON NAMES
SELECT * FROM ARTIST NATURAL JOIN ALBUM;

-- CROSS JOIN - CARTESIAN PRODUCT OF TWO TABLES
SELECT AL.TITLE, ART.NAME FROM ALBUM AL, ARTIST ART;

-- JOINING MORE THAN TWO TABLES

SELECT  TRACK.NAME AS TRACK, 
        ALBUM.TITLE AS TITLE, 
        ARTIST.NAME AS ARTIST,
        GENRE.name AS GENRE,
        INVOICELINE.INVOICELINEID AS InvLine_ID,
        invoice.invoiceid AS Inv_id,
        PLAYLISTTRACK.TRACKID AS pl_tracK_NUM,
        PLAYLIST.NAME AS PLAYLIST,
        mediatype.name AS MEDIA_TYPE,
        CUSTOMER.FIRSTNAME AS CUS,
        EMPLOYEE.FIRSTNAME AS EMP
FROM TRACK
JOIN ALBUM          ON TRACK.ALBUMID            = ALBUM.ALBUMID
JOIN ARTIST         ON ARTIST.ARTISTID          = ALBUM.ARTISTID
JOIN GENRE          ON GENRE.GENREID            = track.genreid
JOIN INVOICELINE    ON invoiceline.trackid      = track.trackid
JOIN INVOICE        ON INVOICE.INVOICEID        = invoiceline.invoiceid
JOIN PLAYLISTTRACK  ON PLAYLISTTRACK.TRACKID    = TRACK.TRACKID
JOIN PLAYLIST       ON PLAYLIST.PLAYLISTID      = PLAYLISTTRACK.PLAYLISTID
JOIN MEDIATYPE ON mediatype.mediatypeid    = track.trackid
JOIN CUSTOMER       ON CUSTOMER.CUSTOMERID      = INVOICE.CUSTOMERID
JOIN EMPLOYEE       ON EMPLOYEE.EMPLOYEEID      = CUSTOMER.SUPPORTREPID;

select count(*) from track;
-- LIST NUM OF TRACKS IN EACH GENRE AND ALPHABETIZE BY GENRE


SELECT  GENRE.name AS GENRE,
        TRACK.NAME AS TRACK
FROM TRACK
JOIN ALBUM          ON TRACK.ALBUMID            = ALBUM.ALBUMID
JOIN ARTIST         ON ARTIST.ARTISTID          = ALBUM.ARTISTID
JOIN GENRE          ON GENRE.GENREID            = track.genreid
ORDER BY GENRE desc, track desc;


CREATE TABLE Customer
(
    CustomerId NUMBER NOT NULL,
    FirstName VARCHAR2(40) NOT NULL,
    LastName VARCHAR2(20) NOT NULL,
    Company VARCHAR2(80),
    Address VARCHAR2(70),
    City VARCHAR2(40),
    State VARCHAR2(40),
    Country VARCHAR2(40),
    PostalCode VARCHAR2(10),
    Phone VARCHAR2(24),
    Fax VARCHAR2(24),
    Email VARCHAR2(60) NOT NULL,
    SupportRepId NUMBER,
    CONSTRAINT PK_Customer PRIMARY KEY  (CustomerId)
);
