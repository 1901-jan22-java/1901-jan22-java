Structured Query Language

How we can communicate directly with our database

5 subclasses
	Data Control Language (DCL)
		-access to database
			GRANT, REVOKE
	Data Definition Language (DDL)
		-how we manage the schema (schema is the blueprint of the database)
			CREATE, ALTER, DROP, TRUNCATE
	Data Query Language (DQL)
		-how to "query" or "view" data
			SELECT -	where 
					into 
					joins 
					subqueries
	Data Manipulation Language (DML)
		CREATE, READ, UPDATE, DELETE data (CRUD operations)
		-INSERT inserts data into table
	Transaction Control Language (TCL)
		-managing interactions or transactions with database
		Begin transactions commit rollback set savepoints


AWS - Amazon Web Service
Infrastructure as a Service (IaaS)
Software as a Service (SaaS)
Platform as a Service (PaaS)

PL/SQL
procedural language (extension of) SQL
	triggers
		ex. whenever a row is inserted into a table
	sequence
	stored procedures
		use all DML & TCL statements
		in/out parameters
	functions
		return one value
		can still have in/out parameters
		DATA QUERY LANGUAGE DQL

JDBC - Java Database Connectivity

Connection 	- you talking to your database
Result Set	-what you get when you query some data
Statement	-BAD. leave you vulnerable to SQL injection (DROP TABLE EMPLOYEES)
	PreparedStatement
		CallableStatement

"SELECT * FROM EMPLOYEES";
WHERE ROLE = " + variable;


DAO - Data Access Object
Coupling & Cohesion

DAO should be the only place you want to communicate with database

Business logic and functional logic can both call the same thing, but they're used differently

